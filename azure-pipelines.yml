trigger:
- feat/new-project-structure

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  displayName: 'Install .NET Core SDK'
  inputs:
    version: 7.x
    performMultiLevelLookup: true
    includePreviewVersions: false

- task: NuGetCommand@2
  displayName: NuGet v2 Restore
  inputs:
    command: restore                      
    restoreSolution: '**/*.sln'
    feedsToUse: 'select'
    versioningScheme: 'byBuildNumber'
    includeNuGetOrg: true

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

#- task: DotNetCoreCLI@2
#  inputs:
#    command: test
#    projects: '**/*tests/*.csproj'
#    arguments: '--configuration $(buildConfiguration)'

#- task: DotNetCoreCLI@2
#  inputs:
#    command: test
#    projects: '**/*tests/*.csproj'
#    arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'

- task: NodeTool@0
  inputs:
    versionSpec: '16.16.0'
  displayName: 'Install Node.js'
 
- task: Npm@1  
  displayName: 'Install Angular CLI 15.2.4' 
  inputs:  
    command: custom  
    verbose: false  
    customCommand: 'install -g @angular/cli@15.2.4'

- task: Npm@1
  displayName: 'npm install'
  inputs:
    command: custom
    workingDir: '$(System.DefaultWorkingDirectory)/src/AdvoSecure.Web'
    customCommand: 'install --legacy-peer-deps'

- task: Npm@1  
  displayName: 'AdvoSecure Web Build'  
  inputs: 
    command: custom
    workingDir: '$(System.DefaultWorkingDirectory)/src/AdvoSecure.Web'
    verbose: false  
    customCommand: 'run build'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'AdvoSecure'
